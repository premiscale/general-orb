description: |+
  Publish Helm packages to Nexus hosted Helm repositories.
parameters:
  resource-class:
    type: enum
    enum:
      - small
      - medium
      - large
      - xlarge
      - 2xlarge
      - premiscale/on-premise
    default: small
  executor:
    description: Executor image to run as.
    default: default
    type: executor
  helm-version:
    description: Helm version to install.
    type: string
    default: v3.8.2
  version:
    description: Version of the package to publish (helm package --version)
    type: string
    default: $CIRCLE_TAG
  app-version:
    description: Application version of the package (helm package --app-version)
    type: string
    default: ''
  path:
    description: Path of the Helm chart to package. Allows the use of matrices for multiple charts.
    type: string
    default: helm/$CIRCLE_PROJECT_REPONAME
  repo:
    description: Nexus Helm repository URL.
    type: string
    default: $HELM_REPOSITORY_URL
  image-tag:
    description: Update a Docker image tag in the chart. By default empty, do not execute this step.
    default: ''
    type: string
  image-tag-path:
    description: If path is different from .image.tag, update the path here for yq.
    default: .image.tag
    type: string
  username:
    description: Nexus Helm repository username.
    type: string
    default: $HELM_USERNAME
  password:
    description: Nexus Helm repository password.
    type: string
    default: $HELM_PASSWORD
  pre-command:
    description: Run a command prior to packaging.
    type: string
    default: ''
executor: << parameters.executor >>
resource_class: << parameters.resource-class >>
steps:
  - checkout
  - helm/install-helm-client:
      version: << parameters.helm-version >>
  - unless:
      condition:
        equal: [<< parameters.image-tag >>, '']
      steps:
        - utils-install-yq
        - run:
            name: Update image tag
            command: |
              if [[ "<< parameters.image-tag >>" =~ v[0-9]+.[0-9]+.[0-9]+ ]]; then
                  export _DOCKER_TAG="$(printf "%s" "<< parameters.image-tag >>" | grep -oP "(?<=v).*" | awk NF)"
              else
                  export _DOCKER_TAG="<< parameters.image-tag >>"
              fi
              yq -i "<< parameters.image-tag-path >> = \"$_DOCKER_TAG\"" << parameters.path >>/values.yaml
  - unless:
      condition:
        equal: [<< parameters.pre-command >>, '']
      steps:
        - run:
            name: Pre-command
            command: << parameters.pre-command >>
  - run:
      name: 'nexus-helm: package'
      command: |+
        if [ -n "<< parameters.version >>" ] && [ -n "<< parameters.app-version >>" ]; then
            helm package << parameters.path >> --dependency-update --version << parameters.version >> --app-version << parameters.app-version >> --destination << parameters.path >>
        elif [ -n "<< parameters.version >>" ] && [ -z "<< parameters.app-version >>" ]; then
            helm package << parameters.path >> --dependency-update --version << parameters.version >> --destination << parameters.path >>
        elif [ -z "<< parameters.version >>" ] && [ -n "<< parameters.app-version >>" ]; then
            helm package << parameters.path >> --dependency-update --app-version << parameters.app-version >> --destination << parameters.path >>
        else
            helm package << parameters.path >> --dependency-update --destination << parameters.path >>
        fi
  - run:
      name: 'nexus-helm: upload'
      command: |+
        curl -u "<< parameters.username >>":"<< parameters.password >>" << parameters.repo >> --upload-file << parameters.path >>/*.tgz
